--ZADACA 2 Osnove Baza Podataka

--Zadatak1

ALTER SESSION SET CURRENT_SCHEMA = erd;
--1. Zadatak:
SELECT DISTINCT p.NAZIV AS Res Naziv
FROM PRAVNO_LICE p
WHERE EXISTS(SELECT * FROM FIZICKO_LICE fl,LOKACIJA l WHERE
fl.LOKACIJA_ID = l.LOKACIJA_ID AND p.LOKACIJA_ID = fl.LOKACIJA_ID);
--1. Rezultat: 207
SELECT Sum(Length(Res Naziv)*3) FROM
(SELECT DISTINCT p.NAZIV AS Res Naziv FROM PRAVNO_LICE p
WHERE EXISTS(SELECT * FROM FIZICKO_LICE fl,LOKACIJA l WHERE
fl.LOKACIJA_ID = l.LOKACIJA_ID AND p.LOKACIJA_ID = fl.LOKACIJA_ID));

SELECT Sum(Length(Res Naziv)*7) FROM
(SELECT DISTINCT p.NAZIV AS Res Naziv FROM PRAVNO_LICE p
WHERE EXISTS(SELECT * FROM FIZICKO_LICE fl,LOKACIJA l WHERE
fl.LOKACIJA_ID = l.LOKACIJA_ID AND p.LOKACIJA_ID = fl.LOKACIJA_ID));

--2. Zadatak
SELECT DISTINCT pl.NAZIV AS Res Naziv, To_Char(upl.DATUM_POTPISIVANJA, 'dd.MM.yyyy') AS "Datum Potpisivanja"
FROM PRAVNO_LICE pl, UGOVOR_ZA_PRAVNO_LICE upl
WHERE pl.PRAVNO_LICE_ID = upl.PRAVNO_LICE_ID
AND upl.DATUM_POTPISIVANJA > (SELECT Min(f.DATUM_KUPOPRODAJE) FROM FAKTURA f, PROIZVOD p, NARUDZBA_PROIZVODA np
WHERE f.FAKTURA_ID = np.FAKTURA_ID
AND p.PROIZVOD_ID = np.PROIZVOD_ID
AND p.BROJ_MJESECI_GARANCIJE IS NOT NULL);
--2. Rezultat: 402
SELECT Sum(Length(Res Naziv)*3 + Length("Datum Potpisivanja")*3) FROM
(SELECT DISTINCT pl.NAZIV AS Res Naziv, To_Char(upl.DATUM_POTPISIVANJA, 'dd.MM.yyyy') AS "Datum Potpisivanja"
FROM PRAVNO_LICE pl, UGOVOR_ZA_PRAVNO_LICE upl
WHERE pl.PRAVNO_LICE_ID = upl.PRAVNO_LICE_ID
AND upl.DATUM_POTPISIVANJA > (SELECT Min(f.DATUM_KUPOPRODAJE) FROM FAKTURA f, PROIZVOD p, NARUDZBA_PROIZVODA np
WHERE f.FAKTURA_ID = np.FAKTURA_ID
AND p.PROIZVOD_ID = np.PROIZVOD_ID
AND p.BROJ_MJESECI_GARANCIJE IS NOT NULL));

SELECT Sum(Length(Res Naziv)*7 + Length("Datum Potpisivanja")*7) FROM
(SELECT DISTINCT pl.NAZIV AS Res Naziv, To_Char(upl.DATUM_POTPISIVANJA, 'dd.MM.yyyy') AS "Datum Potpisivanja"
FROM PRAVNO_LICE pl, UGOVOR_ZA_PRAVNO_LICE upl
WHERE pl.PRAVNO_LICE_ID = upl.PRAVNO_LICE_ID
AND upl.DATUM_POTPISIVANJA > (SELECT Min(f.DATUM_KUPOPRODAJE) FROM FAKTURA f, PROIZVOD p, NARUDZBA_PROIZVODA np
WHERE f.FAKTURA_ID = np.FAKTURA_ID
AND p.PROIZVOD_ID = np.PROIZVOD_ID
AND p.BROJ_MJESECI_GARANCIJE IS NOT NULL));

--3. Zadatak:
SELECT * FROM KATEGORIJA;

SELECT p.NAZIV FROM PROIZVOD p
WHERE p.KATEGORIJA_ID = ANY (SELECT p2.KATEGORIJA_ID FROM PROIZVOD p2, KOLICINA k
WHERE p2.PROIZVOD_ID = k.PROIZVOD_ID
AND k.KOLICINA_PROIZVODA = (SELECT Max(k2.KOLICINA_PROIZVODA) FROM KOLICINA k2));
--3. Rezultat: 51
SELECT Sum(Length(naziv)*3) FROM
(SELECT p.NAZIV FROM PROIZVOD p
WHERE p.KATEGORIJA_ID = ANY (SELECT p2.KATEGORIJA_ID FROM PROIZVOD p2, KOLICINA k
WHERE p2.PROIZVOD_ID = k.PROIZVOD_ID
AND k.KOLICINA_PROIZVODA = (SELECT Max(k2.KOLICINA_PROIZVODA) FROM KOLICINA k2)));

SELECT Sum(Length(naziv)*7) FROM
(SELECT p.NAZIV FROM PROIZVOD p
WHERE p.KATEGORIJA_ID = ANY (SELECT p2.KATEGORIJA_ID FROM PROIZVOD p2, KOLICINA k
WHERE p2.PROIZVOD_ID = k.PROIZVOD_ID
AND k.KOLICINA_PROIZVODA = (SELECT Max(k2.KOLICINA_PROIZVODA) FROM KOLICINA k2)));

--4. Zadatak:
SELECT p.NAZIV, pl.NAZIV FROM PROIZVOD p, PROIZVODJAC pr,PRAVNO_LICE pl
WHERE pl.PRAVNO_LICE_ID = pr.PROIZVODJAC_ID AND pr.PROIZVODJAC_ID = p.PROIZVODJAC_ID
AND EXISTS(SELECT 'x' FROM PROIZVOD p2
WHERE pr.PROIZVODJAC_ID = p2.PROIZVODJAC_ID
AND p2.CIJENA > (SELECT Avg(p3.CIJENA) FROM PROIZVOD p3));
--4. Rezultat: 504
SELECT Sum(Length("Proizvod")*3 + Length("Proizvodjac")*3) FROM
(SELECT p.NAZIV AS "Proizvod", pl.NAZIV AS "Proizvodjac" FROM PROIZVOD p, PROIZVODJAC pr,PRAVNO_LICE pl
WHERE pl.PRAVNO_LICE_ID = pr.PROIZVODJAC_ID AND pr.PROIZVODJAC_ID = p.PROIZVODJAC_ID
AND EXISTS(SELECT 'x' FROM PROIZVOD p2
WHERE pr.PROIZVODJAC_ID = p2.PROIZVODJAC_ID
AND p2.CIJENA > (SELECT Avg(p3.CIJENA) FROM PROIZVOD p3)));

SELECT Sum(Length("Proizvod")*7 + Length("Proizvodjac")*7) FROM
(SELECT p.NAZIV AS "Proizvod", pl.NAZIV AS "Proizvodjac" FROM PROIZVOD p, PROIZVODJAC pr,PRAVNO_LICE pl
WHERE pl.PRAVNO_LICE_ID = pr.PROIZVODJAC_ID AND pr.PROIZVODJAC_ID = p.PROIZVODJAC_ID
AND EXISTS(SELECT 'x' FROM PROIZVOD p2
WHERE pr.PROIZVODJAC_ID = p2.PROIZVODJAC_ID
AND p2.CIJENA > (SELECT Avg(p3.CIJENA) FROM PROIZVOD p3)));

--5. Zadatak:
SELECT fl.IME || ' ' ||fl.PREZIME AS "Ime i prezime", Sum(Nvl(f.IZNOS,0)) AS "iznos"
FROM FIZICKO_LICE fl, KUPAC k, UPOSLENIK u, FAKTURA f
WHERE fl.FIZICKO_LICE_ID = k.KUPAC_ID
AND u.UPOSLENIK_ID = fl.FIZICKO_LICE_ID
AND f.KUPAC_ID = k.KUPAC_ID
HAVING Sum(f.IZNOS) > (
SELECT Round(Avg(Sum(f2.IZNOS)),2)
FROM FAKTURA f2, KUPAC k2, FIZICKO_LICE fl2
WHERE f2.KUPAC_ID = k2.KUPAC_ID
AND k2.KUPAC_ID = fl2.FIZICKO_LICE_ID
GROUP BY fl2.IME, fl2.PREZIME
)
GROUP BY fl.IME, fl.PREZIME
ORDER BY fl.IME, fl.PREZIME;
--5. Rezultat: 6897

SELECT Sum(Length("Ime i prezime")*3 + "iznos"*3)
FROM (
SELECT fl.IME || ' ' ||fl.PREZIME AS "Ime i prezime", Sum(Nvl(f.IZNOS,0)) AS "iznos"
FROM FIZICKO_LICE fl, KUPAC k, UPOSLENIK u, FAKTURA f
WHERE fl.FIZICKO_LICE_ID = k.KUPAC_ID
AND u.UPOSLENIK_ID = fl.FIZICKO_LICE_ID
AND f.KUPAC_ID = k.KUPAC_ID
HAVING Sum(f.IZNOS) > (
SELECT Round(Avg(Sum(f2.IZNOS)),2)
FROM FAKTURA f2, KUPAC k2, FIZICKO_LICE fl2
WHERE f2.KUPAC_ID = k2.KUPAC_ID
AND k2.KUPAC_ID = fl2.FIZICKO_LICE_ID
GROUP BY fl2.IME, fl2.PREZIME
)
GROUP BY fl.IME, fl.PREZIME
ORDER BY fl.IME, fl.PREZIME
);

SELECT Sum(Length("Ime i prezime")*7 + "iznos"*7)
FROM (
SELECT fl.IME || ' ' ||fl.PREZIME AS "Ime i prezime", Sum(Nvl(f.IZNOS,0)) AS "iznos"
FROM FIZICKO_LICE fl, KUPAC k, UPOSLENIK u, FAKTURA f
WHERE fl.FIZICKO_LICE_ID = k.KUPAC_ID
AND u.UPOSLENIK_ID = fl.FIZICKO_LICE_ID
AND f.KUPAC_ID = k.KUPAC_ID
HAVING Sum(f.IZNOS) > (SELECT Round(Avg(Sum(f2.IZNOS)),2) FROM FAKTURA f2, KUPAC k2, FIZICKO_LICE fl2
                                WHERE f2.KUPAC_ID = k2.KUPAC_ID AND k2.KUPAC_ID = fl2.FIZICKO_LICE_ID
                                GROUP BY fl2.IME, fl2.PREZIME)
                                GROUP BY fl.IME, fl.PREZIME
                                ORDER BY fl.IME, fl.PREZIME);


--6. Zadatak:
SELECT pl.NAZIV AS "naziv"
FROM PRAVNO_LICE pl, KURIRSKA_SLUZBA kur, ISPORUKA isp, FAKTURA f, NARUDZBA_PROIZVODA np, POPUST po
WHERE kur.KURIRSKA_SLUZBA_ID = pl.PRAVNO_LICE_ID
AND kur.KURIRSKA_SLUZBA_ID = isp.KURIRSKA_SLUZBA_ID
AND isp.ISPORUKA_ID = f.ISPORUKA_ID
AND f.FAKTURA_ID = np.FAKTURA_ID
AND np.POPUST_ID = po.POPUST_ID
AND po.POSTOTAK IS NOT NULL
HAVING Sum(np.KOLICINA_JEDNOG_PROIZVODA) IN (SELECT Max(Sum(np2.KOLICINA_JEDNOG_PROIZVODA))
FROM PRAVNO_LICE pl2, KURIRSKA_SLUZBA kur2, ISPORUKA is2, FAKTURA f2, NARUDZBA_PROIZVODA np2, POPUST po2
WHERE kur2.KURIRSKA_SLUZBA_ID = pl2.PRAVNO_LICE_ID
AND kur2.KURIRSKA_SLUZBA_ID = is2.KURIRSKA_SLUZBA_ID
AND is2.ISPORUKA_ID = f2.ISPORUKA_ID
AND f2.FAKTURA_ID = np2.FAKTURA_ID
AND np2.POPUST_ID = po2.POPUST_ID
AND po2.POSTOTAK IS NOT NULL
GROUP BY kur2.KURIRSKA_SLUZBA_ID)
GROUP BY pl.NAZIV;

--6. Rezultat: 18
SELECT Sum(Length("naziv")*3) FROM
(SELECT pl.NAZIV AS "naziv"
FROM PRAVNO_LICE pl, KURIRSKA_SLUZBA kur, ISPORUKA isp, FAKTURA f, NARUDZBA_PROIZVODA np, POPUST po
WHERE kur.KURIRSKA_SLUZBA_ID = pl.PRAVNO_LICE_ID
AND kur.KURIRSKA_SLUZBA_ID = isp.KURIRSKA_SLUZBA_ID
AND isp.ISPORUKA_ID = f.ISPORUKA_ID
AND f.FAKTURA_ID = np.FAKTURA_ID
AND np.POPUST_ID = po.POPUST_ID
AND po.POSTOTAK IS NOT NULL
HAVING Sum(np.KOLICINA_JEDNOG_PROIZVODA) IN (SELECT Max(Sum(np2.KOLICINA_JEDNOG_PROIZVODA))
FROM PRAVNO_LICE pl2, KURIRSKA_SLUZBA kur2, ISPORUKA is2, FAKTURA f2, NARUDZBA_PROIZVODA np2, POPUST po2
WHERE kur2.KURIRSKA_SLUZBA_ID = pl2.PRAVNO_LICE_ID
AND kur2.KURIRSKA_SLUZBA_ID = is2.KURIRSKA_SLUZBA_ID
AND is2.ISPORUKA_ID = f2.ISPORUKA_ID
AND f2.FAKTURA_ID = np2.FAKTURA_ID
AND np2.POPUST_ID = po2.POPUST_ID
AND po2.POSTOTAK IS NOT NULL
GROUP BY kur2.KURIRSKA_SLUZBA_ID)
GROUP BY pl.NAZIV);

SELECT Sum(Length("naziv")*7) FROM
(SELECT pl.NAZIV AS "naziv"
FROM PRAVNO_LICE pl, KURIRSKA_SLUZBA kur, ISPORUKA isp, FAKTURA f, NARUDZBA_PROIZVODA np, POPUST po
WHERE kur.KURIRSKA_SLUZBA_ID = pl.PRAVNO_LICE_ID
AND kur.KURIRSKA_SLUZBA_ID = isp.KURIRSKA_SLUZBA_ID
AND isp.ISPORUKA_ID = f.ISPORUKA_ID
AND f.FAKTURA_ID = np.FAKTURA_ID
AND np.POPUST_ID = po.POPUST_ID
AND po.POSTOTAK IS NOT NULL
HAVING Sum(np.KOLICINA_JEDNOG_PROIZVODA) IN (SELECT Max(Sum(np2.KOLICINA_JEDNOG_PROIZVODA))
FROM PRAVNO_LICE pl2, KURIRSKA_SLUZBA kur2, ISPORUKA is2, FAKTURA f2, NARUDZBA_PROIZVODA np2, POPUST po2
WHERE kur2.KURIRSKA_SLUZBA_ID = pl2.PRAVNO_LICE_ID
AND kur2.KURIRSKA_SLUZBA_ID = is2.KURIRSKA_SLUZBA_ID
AND is2.ISPORUKA_ID = f2.ISPORUKA_ID
AND f2.FAKTURA_ID = np2.FAKTURA_ID
AND np2.POPUST_ID = po2.POPUST_ID
AND po2.POSTOTAK IS NOT NULL
GROUP BY kur2.KURIRSKA_SLUZBA_ID)
GROUP BY pl.NAZIV);

--7. Zadatak:
SELECT DISTINCT fl.IME || ' ' || fl.PREZIME AS "Kupac", Sum(pomocna.Usteda) AS "Usteda"
FROM (SELECT (po2.POSTOTAK/100 * p2.CIJENA * np2.KOLICINA_JEDNOG_PROIZVODA) Usteda, np2.FAKTURA_ID faktura_id
FROM POPUST po2, PROIZVOD p2, NARUDZBA_PROIZVODA np2
WHERE np2.POPUST_ID = po2.POPUST_ID AND np2.PROIZVOD_ID = p2.PROIZVOD_ID) pomocna,
FIZICKO_LICE fl, KUPAC k, FAKTURA f
WHERE fl.FIZICKO_LICE_ID = k.KUPAC_ID
AND k.KUPAC_ID = f.KUPAC_ID
AND f.FAKTURA_ID = pomocna.faktura_id
GROUP BY fl.IME || ' ' || fl.PREZIME;
--7. Rezultat 17709
SELECT Sum(Length("Kupac")*3 + Round("Usteda")*3) FROM
(SELECT DISTINCT fl.IME || ' ' || fl.PREZIME AS "Kupac", Sum(pomocna.Usteda) AS "Usteda"
FROM (SELECT (po2.POSTOTAK/100 * p2.CIJENA * np2.KOLICINA_JEDNOG_PROIZVODA) Usteda, np2.FAKTURA_ID faktura_id
FROM POPUST po2, PROIZVOD p2, NARUDZBA_PROIZVODA np2
WHERE np2.POPUST_ID = po2.POPUST_ID AND np2.PROIZVOD_ID = p2.PROIZVOD_ID) pomocna,
FIZICKO_LICE fl, KUPAC k, FAKTURA f
WHERE fl.FIZICKO_LICE_ID = k.KUPAC_ID
AND k.KUPAC_ID = f.KUPAC_ID
AND f.FAKTURA_ID = pomocna.faktura_id
GROUP BY fl.IME || ' ' || fl.PREZIME);

