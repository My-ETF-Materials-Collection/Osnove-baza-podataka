--ZADACA 2 Osnove Baza Podataka

--Zadatak1

ALTER SESSION SET CURRENT_SCHEMA = erd;
--1. Zadatak:
SELECT DISTINCT p.NAZIV AS Res Naziv FROM PRAVNO_LICE p
WHERE EXISTS(SELECT * FROM FIZICKO_LICE fl,LOKACIJA l WHERE
fl.LOKACIJA_ID = l.LOKACIJA_ID AND p.LOKACIJA_ID = fl.LOKACIJA_ID);
--1. Rezultat: 207
SELECT Sum(Length(Res Naziv)*3) FROM
(SELECT DISTINCT p.NAZIV AS Res Naziv FROM PRAVNO_LICE p
WHERE EXISTS(SELECT * FROM FIZICKO_LICE fl,LOKACIJA l WHERE
fl.LOKACIJA_ID = l.LOKACIJA_ID AND p.LOKACIJA_ID = fl.LOKACIJA_ID));

SELECT Sum(Length(Res Naziv)*7) FROM
(SELECT DISTINCT p.NAZIV AS Res Naziv FROM PRAVNO_LICE p
WHERE EXISTS(SELECT * FROM FIZICKO_LICE fl,LOKACIJA l WHERE
fl.LOKACIJA_ID = l.LOKACIJA_ID AND p.LOKACIJA_ID = fl.LOKACIJA_ID));

--2. Zadatak
SELECT DISTINCT pl.NAZIV AS Res Naziv, To_Char(upl.DATUM_POTPISIVANJA, 'dd.MM.yyyy') AS "Datum Potpisivanja"
FROM PRAVNO_LICE pl, UGOVOR_ZA_PRAVNO_LICE upl
WHERE pl.PRAVNO_LICE_ID = upl.PRAVNO_LICE_ID
AND upl.DATUM_POTPISIVANJA > (SELECT Min(f.DATUM_KUPOPRODAJE) FROM FAKTURA f, PROIZVOD p, NARUDZBA_PROIZVODA np
WHERE f.FAKTURA_ID = np.FAKTURA_ID
AND p.PROIZVOD_ID = np.PROIZVOD_ID
AND p.BROJ_MJESECI_GARANCIJE IS NOT NULL);
--2. Rezultat: 402
SELECT Sum(Length(Res Naziv)*3 + Length("Datum Potpisivanja")*3) FROM
(SELECT DISTINCT pl.NAZIV AS Res Naziv, To_Char(upl.DATUM_POTPISIVANJA, 'dd.MM.yyyy') AS "Datum Potpisivanja"
FROM PRAVNO_LICE pl, UGOVOR_ZA_PRAVNO_LICE upl
WHERE pl.PRAVNO_LICE_ID = upl.PRAVNO_LICE_ID
AND upl.DATUM_POTPISIVANJA > (SELECT Min(f.DATUM_KUPOPRODAJE) FROM FAKTURA f, PROIZVOD p, NARUDZBA_PROIZVODA np
WHERE f.FAKTURA_ID = np.FAKTURA_ID
AND p.PROIZVOD_ID = np.PROIZVOD_ID
AND p.BROJ_MJESECI_GARANCIJE IS NOT NULL));

SELECT Sum(Length(Res Naziv)*7 + Length("Datum Potpisivanja")*7) FROM
(SELECT DISTINCT pl.NAZIV AS Res Naziv, To_Char(upl.DATUM_POTPISIVANJA, 'dd.MM.yyyy') AS "Datum Potpisivanja"
FROM PRAVNO_LICE pl, UGOVOR_ZA_PRAVNO_LICE upl
WHERE pl.PRAVNO_LICE_ID = upl.PRAVNO_LICE_ID
AND upl.DATUM_POTPISIVANJA > (SELECT Min(f.DATUM_KUPOPRODAJE) FROM FAKTURA f, PROIZVOD p, NARUDZBA_PROIZVODA np
WHERE f.FAKTURA_ID = np.FAKTURA_ID
AND p.PROIZVOD_ID = np.PROIZVOD_ID
AND p.BROJ_MJESECI_GARANCIJE IS NOT NULL));

--3. Zadatak:
SELECT * FROM KATEGORIJA;

SELECT p.NAZIV FROM PROIZVOD p
WHERE p.KATEGORIJA_ID = ANY (SELECT p2.KATEGORIJA_ID FROM PROIZVOD p2, KOLICINA k
WHERE p2.PROIZVOD_ID = k.PROIZVOD_ID
AND k.KOLICINA_PROIZVODA = (SELECT Max(k2.KOLICINA_PROIZVODA) FROM KOLICINA k2));
--3. Rezultat: 51
SELECT Sum(Length(naziv)*3) FROM
(SELECT p.NAZIV FROM PROIZVOD p
WHERE p.KATEGORIJA_ID = ANY (SELECT p2.KATEGORIJA_ID FROM PROIZVOD p2, KOLICINA k
WHERE p2.PROIZVOD_ID = k.PROIZVOD_ID
AND k.KOLICINA_PROIZVODA = (SELECT Max(k2.KOLICINA_PROIZVODA) FROM KOLICINA k2)));

SELECT Sum(Length(naziv)*7) FROM
(SELECT p.NAZIV FROM PROIZVOD p
WHERE p.KATEGORIJA_ID = ANY (SELECT p2.KATEGORIJA_ID FROM PROIZVOD p2, KOLICINA k
WHERE p2.PROIZVOD_ID = k.PROIZVOD_ID
AND k.KOLICINA_PROIZVODA = (SELECT Max(k2.KOLICINA_PROIZVODA) FROM KOLICINA k2)));

--4. Zadatak:
SELECT p.NAZIV, pl.NAZIV FROM PROIZVOD p, PROIZVODJAC pr,PRAVNO_LICE pl
WHERE pl.PRAVNO_LICE_ID = pr.PROIZVODJAC_ID AND pr.PROIZVODJAC_ID = p.PROIZVODJAC_ID
AND EXISTS(SELECT 'x' FROM PROIZVOD p2
WHERE pr.PROIZVODJAC_ID = p2.PROIZVODJAC_ID
AND p2.CIJENA > (SELECT Avg(p3.CIJENA) FROM PROIZVOD p3));
--4. Rezultat: 504
SELECT Sum(Length("Proizvod")*3 + Length("Proizvodjac")*3) FROM
(SELECT p.NAZIV AS "Proizvod", pl.NAZIV AS "Proizvodjac" FROM PROIZVOD p, PROIZVODJAC pr,PRAVNO_LICE pl
WHERE pl.PRAVNO_LICE_ID = pr.PROIZVODJAC_ID AND pr.PROIZVODJAC_ID = p.PROIZVODJAC_ID
AND EXISTS(SELECT 'x' FROM PROIZVOD p2
WHERE pr.PROIZVODJAC_ID = p2.PROIZVODJAC_ID
AND p2.CIJENA > (SELECT Avg(p3.CIJENA) FROM PROIZVOD p3)));

SELECT Sum(Length("Proizvod")*7 + Length("Proizvodjac")*7) FROM
(SELECT p.NAZIV AS "Proizvod", pl.NAZIV AS "Proizvodjac" FROM PROIZVOD p, PROIZVODJAC pr,PRAVNO_LICE pl
WHERE pl.PRAVNO_LICE_ID = pr.PROIZVODJAC_ID AND pr.PROIZVODJAC_ID = p.PROIZVODJAC_ID
AND EXISTS(SELECT 'x' FROM PROIZVOD p2
WHERE pr.PROIZVODJAC_ID = p2.PROIZVODJAC_ID
AND p2.CIJENA > (SELECT Avg(p3.CIJENA) FROM PROIZVOD p3)));

